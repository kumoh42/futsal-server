name: Deploy to EC2

on:
  push:
    branches: ["main", "KUM-**"]
  #pull_request:
    #branches: ["main"]


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Read .nvmrc
      run: echo ::set-output name=NVMRC::$(cat .nvmrc)
      id: nvm

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '${{ steps.nvm.outputs.NVMRC }}'
        
    - name: Install Dependencies
      run: npm install

    # Prettify
    - name: Format
      run: npm run format

    - name: Lint
      run: npm run lint

    - name: Test run
      run: npm run test


  # 도커 이미지 빌드
  # test가 완료되어야 build로 넘어옴
  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ secrets.ECR_PATH }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: latest
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "DATABASE_TYPE=${{ secrets.DATABASE_TYPE }}" >> .env
        echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
        echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env

    - name: Build Docker image
      run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Docker image to ECR
      run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: SSH into EC2 and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USERNAME }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          # Pull and run the Docker image on EC2
          echo "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker stop ${{ env.ECR_REPOSITORY }} || true
          docker rm ${{ env.ECR_REPOSITORY }} || true
          docker run -d --name ${{ env.ECR_REPOSITORY }} -p 3000:3000 ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}