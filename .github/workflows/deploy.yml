name: Deploy Nestjs on lambda

on:
  push:
    branches:
      - KUM-67-docker-build-Î∞è-deploy
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ secrets.ECR_PATH }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: latest
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build \
        --build-arg DATABASE_TYPE=${{ secrets.DATABASE_TYPE }} \
        --build-arg DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
        --build-arg DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
        --build-arg DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
        --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        --build-arg DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
        --build-arg JWT_ACCESS_SECRET_KEY=${{ secrets.JWT_ACCESS_SECRET_KEY }} \
        --build-arg JWT_ACCESS_EXPIRATION_TIME=${{ secrets.JWT_ACCESS_EXPIRATION_TIME }} \
        --build-arg JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY }} \
        --build-arg JWT_REFRESH_EXPIRATION_TIME=${{ secrets.JWT_REFRESH_EXPIRATION_TIME }} \
        --build-arg CACHE_TTL=${{ secrets.CACHE_TTL }} \
        --build-arg CACHE_MAX=${{ secrets.CACHE_MAX }} \
        --build-arg SLACK_URL=${{ secrets.SLACK_URL }} \
        --build-arg SLACK_MESSAGE_TEMPLETE="${{ secrets.SLACK_MESSAGE_TEMPLETE }}" \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Docker image to ECR
      run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}  # Change to your desired region    
            
    - name: Update Lambda function image
      run: |
        aws lambda update-function-code \
          --function-name futsal-server \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG