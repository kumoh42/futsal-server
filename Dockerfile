# DEVELOPMENT
FROM amazon/aws-lambda-nodejs:18 As development
WORKDIR /usr/src/app

# Declare build arguments
ARG DATABASE_TYPE
ARG DATABASE_PORT
ARG DATABASE_HOST
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG DATABASE_NAME
ARG JWT_ACCESS_SECRET_KEY
ARG JWT_ACCESS_EXPIRATION_TIME
ARG JWT_REFRESH_SECRET_KEY
ARG JWT_REFRESH_EXPIRATION_TIME
ARG CACHE_TTL
ARG CACHE_MAX
ARG SLACK_URL
ARG SLACK_MESSAGE_TEMPLETE

# Set environment variables from build arguments
ENV DATABASE_TYPE=$DATABASE_TYPE
ENV DATABASE_PORT=$DATABASE_PORT
ENV DATABASE_HOST=$DATABASE_HOST
ENV DATABASE_USERNAME=$DATABASE_USERNAME
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD
ENV DATABASE_NAME=$DATABASE_NAME
ENV JWT_ACCESS_SECRET_KEY=$JWT_ACCESS_SECRET_KEY
ENV JWT_ACCESS_EXPIRATION_TIME=$JWT_ACCESS_EXPIRATION_TIME
ENV JWT_REFRESH_SECRET_KEY=$JWT_REFRESH_SECRET_KEY
ENV JWT_REFRESH_EXPIRATION_TIME=$JWT_REFRESH_EXPIRATION_TIME
ENV CACHE_TTL=$CACHE_TTL
ENV CACHE_MAX=$CACHE_MAX
ENV SLACK_URL=$SLACK_URL
ENV SLACK_MESSAGE_TEMPLETE=$SLACK_MESSAGE_TEMPLETE

COPY package*.json ./

RUN npm install

COPY . .

RUN npm run build

# PRODUCTION
FROM amazon/aws-lambda-nodejs:18 As production

WORKDIR /usr/src/app

# We don't need to declare ARGs again, but we do need to set ENVs
ENV DATABASE_TYPE=$DATABASE_TYPE
ENV DATABASE_PORT=$DATABASE_PORT
ENV DATABASE_HOST=$DATABASE_HOST
ENV DATABASE_USERNAME=$DATABASE_USERNAME
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD
ENV DATABASE_NAME=$DATABASE_NAME
ENV JWT_ACCESS_SECRET_KEY=$JWT_ACCESS_SECRET_KEY
ENV JWT_ACCESS_EXPIRATION_TIME=$JWT_ACCESS_EXPIRATION_TIME
ENV JWT_REFRESH_SECRET_KEY=$JWT_REFRESH_SECRET_KEY
ENV JWT_REFRESH_EXPIRATION_TIME=$JWT_REFRESH_EXPIRATION_TIME
ENV CACHE_TTL=$CACHE_TTL
ENV CACHE_MAX=$CACHE_MAX
ENV SLACK_URL=$SLACK_URL
ENV SLACK_MESSAGE_TEMPLETE=$SLACK_MESSAGE_TEMPLETE

COPY package*.json ./

RUN npm ci --only=production

COPY . .

COPY --from=development /usr/src/app/dist ./dist

CMD [ "node", "dist/serverlss.js" ]
